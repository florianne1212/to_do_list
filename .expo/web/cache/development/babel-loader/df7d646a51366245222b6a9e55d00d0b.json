{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/user42/redux_int_the_making/screens/HomeTodo.js\";\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Constants from 'expo-constants';\nimport Spacer from \"../components/Spacer\";\nimport ButtonIcon from \"../components/ButtonIcon\";\nimport { Title, Paragraph, Card, Button, TextInput } from 'react-native-paper';\nimport { FontAwesome as Icon } from '@expo/vector-icons';\nimport { connect } from 'react-redux';\nimport { addTodo, deleteTodo } from \"../redux/actions\";\nimport { addTask, deleteTask } from \"../redux/action\";\n\nvar TodoApp = function TodoApp(_ref) {\n  var todo_list = _ref.todo_list,\n      addTodo = _ref.addTodo,\n      deleteTodo = _ref.deleteTodo;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      task = _React$useState2[0],\n      setTask = _React$useState2[1];\n\n  var handleAddTodo = function handleAddTodo() {\n    addTask(task);\n    setTask('');\n  };\n\n  var handleDeleteTodo = function handleDeleteTodo(id) {\n    deleteTask(id);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    title: \"Card Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, \"ToDo App with React Native and Redux\")), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, \"Add ToDo Here\"), React.createElement(TextInput, {\n    mode: \"outlined\",\n    label: \"Task\",\n    value: task,\n    onChangeText: function onChangeText(task) {\n      return setTask(task);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleAddTodo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, \"Add Task\"))), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: todo_list,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, React.createElement(Card.Title, {\n        title: \"Task#\" + item.id,\n        left: function left(props) {\n          return React.createElement(Icon, {\n            name: \"tasks\",\n            size: 24,\n            color: \"black\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 34\n            }\n          });\n        },\n        right: function right(props) {\n          return React.createElement(ButtonIcon, {\n            iconName: \"close\",\n            color: \"red\",\n            onPress: function onPress() {\n              return handleDeleteTodo(item.id);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 35\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }\n      }), React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }\n      }, React.createElement(Paragraph, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }\n      }, item.task))), React.createElement(Spacer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 10\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    todo_list: state.todos.todo_list\n  };\n};\n\nvar mapDispatchToProps = {\n  addTask: addTask,\n  deleteTask: deleteTask\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoApp);","map":{"version":3,"sources":["/home/user42/redux_int_the_making/screens/HomeTodo.js"],"names":["React","Constants","Spacer","ButtonIcon","Title","Paragraph","Card","Button","TextInput","FontAwesome","Icon","connect","addTodo","deleteTodo","addTask","deleteTask","TodoApp","todo_list","useState","task","setTask","handleAddTodo","handleDeleteTodo","id","styles","container","paragraph","item","index","props","StyleSheet","create","flex","paddingTop","statusBarHeight","backgroundColor","padding","margin","fontSize","fontWeight","textAlign","mapStateToProps","state","ownProps","todos","mapDispatchToProps"],"mappings":"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","sourcesContent":["// import { MaterialIcons } from \"@expo/vector-icons\";\n// import { StatusBar } from 'expo-status-bar';\n// import React, {useState} from 'react';\n// import { StyleSheet, Text, View,ScrollView, KeyboardAvoidingView, Platform, TextInput, TouchableOpacity, Keyboard, FlatList  } from 'react-native';\n// import BouncyCheckbox from \"react-native-bouncy-checkbox\";\n// import { connect } from 'react-redux';\n// import { addTask, deleteTask} from '../redux/action';\n\n// const HomeTodo =  ({ todo_list, addTask, deleteTask }) => {\n\n\n//   const [task, setTask] = useState();\n\n//   const [taskItems, setTaskItems] = useState([]);\n\n//   let myHeight = 50;\n\n//   const handleAddTask = () => {\n//     Keyboard.dismiss();\n// \taddTask(task)\n// \tsetSelection(true);\n//     setTask(null);\n//   }\n\n//   const completeTask = (index) => {\n//     deleteTask(id)\n//   }\n\n//   const [isSelected, setSelection] = useState(false);\n\n\n//   return (\n//     <View style={styles.container}>\n//       <View style={styles.tasksWrapper}>\n//         <Text style={styles.sectionTitle}>Today's tasks</Text>\n\n//       </View>\n\n// \t  {/* <ScrollView>\n//       <View style={styles.items}>\n//         {\n//           taskItems.map((item, index) => {\n//             return (\n// \t\t\t\t<View style={styles.item}>\n// \t\t\t\t<View style={styles.itemLeft}>\n// \t\t\t\t\t<View > \n// \t\t\t\t\t<BouncyCheckbox\n// \t\t\t\t\t\tsize={25}\n// \t\t\t\t\t\tfillColor=\"#188078\"\n// \t\t\t\t\t\ticonStyle={{ borderColor: \"#188078\" }}\n// \t\t\t\t\t/>\n// \t\t\t\t\t</View>\n// \t\t\t\t</View>\n// \t\t\t\t<Text style={styles.text}>{item}</Text>\n// \t\t\t\t<TouchableOpacity key={index} onPress={() => completeTask(index)}>\n// \t\t\t\t\t\t<MaterialIcons name=\"delete\" size={25} color=\"#188078\" />\n// \t\t\t\t</TouchableOpacity>\n// \t\t\t\t</View>\n//             ) \n//           })\n//         }\n//       </View>\n// \t  </ScrollView> */}\n\n// \t\t<FlatList\n// \t\t\t\tdata={todo_list}\n// \t\t\t\tkeyExtractor={(item) => item.id}\n// \t\t\t\trenderItem={({item, index}) => {\n// \t\t\t\treturn (\n\n// \t\t\t\t\t<View style={styles.item}>\n// \t\t\t\t\t<View style={styles.itemLeft}>\n// \t\t\t\t\t\t<View > \n// \t\t\t\t\t\t<BouncyCheckbox\n// \t\t\t\t\t\t\tsize={25}\n// \t\t\t\t\t\t\tfillColor=\"#188078\"\n// \t\t\t\t\t\t\ticonStyle={{ borderColor: \"#188078\" }}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t</View>\n// \t\t\t\t\t</View>\n// \t\t\t\t\t<Text style={styles.text}>{item}</Text>\n// \t\t\t\t\t<TouchableOpacity key={index} onPress={() => completeTask(item.task)}>\n// \t\t\t\t\t\t\t<MaterialIcons name=\"delete\" size={25} color=\"#188078\" />\n// \t\t\t\t\t</TouchableOpacity>\n// \t\t\t\t\t</View>\n// \t\t\t\t\t// <>\n// \t\t\t\t\t// <Card>\n// \t\t\t\t\t// <Card.Title\n// \t\t\t\t\t// \ttitle={`Task#${item.id}`}\n// \t\t\t\t\t// \tleft={(props) => <Icon name=\"tasks\" size={24} color=\"black\" />}\n// \t\t\t\t\t// \tright={(props) => <ButtonIcon iconName=\"close\" color=\"red\" onPress={() => handleDeleteTodo(item.id)} />}\n// \t\t\t\t\t// />\n// \t\t\t\t\t// <Card.Content>\n// \t\t\t\t\t// \t<Paragraph>{item.task}</Paragraph>\n// \t\t\t\t\t// </Card.Content>\n// \t\t\t\t\t// </Card>\n// \t\t\t\t\t// <Spacer />\n// \t\t\t\t\t// </>\n// \t\t\t\t);\n// \t\t\t\t}}\n// \t\t/>\n\n//       <KeyboardAvoidingView \n//         behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n//         style={styles.writeTasksWrapper}\n//       >\n//         <TextInput style={styles.input} placeholder={\"Write a task\"} value={task} onChangeText={text => setTask(text)} />\n\n//         <TouchableOpacity onPress={() => handleAddTask()}>\n//           <View style={styles.addWrapper}>\n//             <Text style={styles.addText}>+</Text>\n\n//           </View>\n//         </TouchableOpacity>\n\n//       </KeyboardAvoidingView>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n// \titem: {\n// \t\tmargin: \"auto\",\n// \t\tmarginLeft: 10,\n// \t\tmaxHeight: \"80%\",\n// \t\twidth: \"95%\",\n// \t\tmaxWidth: \"95%\",\n//         backgroundColor: '#FFF',\n//         padding: 15,\n//         borderRadius: 20,\n//         flexDirection: 'row',\n//         alignItems: \"center\",\n//         justifyContent: \"space-between\",\n// \t\tmarginBottom: 20,\n// \t\toverflow: \"scroll\"\n//     },\n//     itemLeft: {\n//         flexDirection: 'row',\n//         alignItems: \"center\",\n//         flexWrap: 'wrap'\n//     },\n//     text: {\n// \t\tmarginTop: \"auto\",\n// \t\twidth: \"75%\",\n// \t\theight: \"auto\",\n// \t\tfontSize: 20,\n// \t\tmarginRight: 20\n//     },\n// \tcontainer: {\n// \t\tflex: 1,\n// \t\toverflow: \"scroll\",\n// \t\tbackgroundColor: '#188078',\n\t\n// \t  },\n// \t  tasksWrapper: {\n// \t\tpaddingTop: 80,\n// \t\tpaddingHorizontal: 20\n\t\n// \t  },\n// \t  sectionTitle: {\n// \t\tcolor: '#FFFFFF',\n// \t\tfontSize: 24,\n// \t\tfontWeight: 'bold'\n// \t  },\n// \t  items: {\n// \t\tmarginTop: 30,\n// \t\tmarginBottom: 85,\n// \t  },\n// \t  writeTasksWrapper : {\n// \t\twidth: \"100%\",\n// \t\tbackgroundColor: \"#188078\",\n// \t\tposition: \"absolute\",\n// \t\theight: 90,\n// \t\tbottom: 0,\n// \t\tflexDirection: \"row\",\n// \t\tjustifyContent: \"space-around\",\n// \t\talignItems: \"center\"\n// \t  },\n// \t  input : {\n// \t\tmargin: 1,\n// \t\tmarginBottom: 5,\n// \t\tpaddingVertical: 15,\n// \t\tpaddingHorizontal: 15,\n// \t\theight: 50,\n// \t\twidth: 250,\n// \t\tbackgroundColor: \"#FFF\",\n// \t\tborderRadius: 20,\n// \t\tborderColor: \"#C0C0C0\",\n// \t\tborderwidth: 1\n// \t  },\n// \t  addWrapper: {\n// \t\tmarginBottom: 5,\n// \t\twidth: 60,\n// \t\theight: 50,\n// \t\tbackgroundColor: \"#FFF\",\n// \t\tborderRadius: 20,\n// \t\tjustifyContent: \"center\",\n// \t\talignItems: \"center\",\n// \t\tborderColor: \"#C0C0C0\",\n// \t\tborderwidth: 1\n// \t  },\n// \t  addText: {}\n// });\n\n// const mapStateToProps = (state, ownProps) => {\n// \treturn {\n// \t  todo_list: state.todos.todo_list,\n// \t}\n// }\n  \n// const mapDispatchToProps = { addTask, deleteTask }\n  \n// export default connect(\n// \tmapStateToProps,\n// \tmapDispatchToProps\n// )(HomeTodo)\n\nimport * as React from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity, FlatList } from 'react-native';\nimport Constants from 'expo-constants';\n\n// You can import from local files\nimport Spacer from '../components/Spacer';\nimport ButtonIcon from '../components/ButtonIcon';\n\n// or any pure javascript modules available in npm\nimport { Title, Paragraph, Card, Button, TextInput } from 'react-native-paper';\nimport { FontAwesome as Icon } from '@expo/vector-icons';\n\n// Import Redux and React Redux Dependencies\nimport { connect } from 'react-redux';\nimport { addTodo, deleteTodo } from '../redux/actions';\nimport { addTask, deleteTask } from '../redux/action';\n\n// Test Data\n// const data = [\n//   {id: 1, task: \"Do this stuff\"},\n//   {id: 2, task: \"Do another stuff\"},\n// ]\n\nconst TodoApp = ({ todo_list, addTodo, deleteTodo }) => {\n  const [task, setTask] = React.useState('');\n\n  const handleAddTodo = () => {\n    addTask(task)\n    setTask('')\n  }\n\n  const handleDeleteTodo = (id) => {\n    deleteTask(id)\n  }\n\n  return (\n    <View style={styles.container}>\n      <Card title=\"Card Title\">\n        <Text style={styles.paragraph}>ToDo App with React Native and Redux</Text>\n      </Card>\n      <Spacer />\n      <Card>\n        <Card.Content>\n          <Title>Add ToDo Here</Title>\n          \n          <TextInput\n            mode=\"outlined\"\n            label=\"Task\"\n            value={task}\n            onChangeText={task => setTask(task)}\n          />\n          <Spacer/>\n          <Button mode=\"contained\" onPress={handleAddTodo}>\n            Add Task\n          </Button>\n        </Card.Content>\n      </Card>\n      <Spacer />\n      <FlatList\n        data={todo_list}\n        keyExtractor={(item) => item.id}\n        renderItem={({item, index}) => {\n          return (\n            <>\n            <Card>\n              <Card.Title\n                title={`Task#${item.id}`}\n                left={(props) => <Icon name=\"tasks\" size={24} color=\"black\" />}\n                right={(props) => <ButtonIcon iconName=\"close\" color=\"red\" onPress={() => handleDeleteTodo(item.id)} />}\n              />\n              <Card.Content>\n                <Paragraph>{item.task}</Paragraph>\n              </Card.Content>\n            </Card>\n            <Spacer />\n            </>\n          );\n        }}\n      />\n      <Spacer />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 10,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todo_list: state.todos.todo_list,\n  }\n}\n\nconst mapDispatchToProps = { addTask, deleteTask}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoApp)\n"]},"metadata":{},"sourceType":"module"}