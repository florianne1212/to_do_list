{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/user42/redux_int_the_making/screens/HomeTodo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var HomeTodo = function (_Component) {\n  _inherits(HomeTodo, _Component);\n\n  var _super = _createSuper(HomeTodo);\n\n  function HomeTodo() {\n    var _this;\n\n    _classCallCheck(this, HomeTodo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      todos: {},\n      isDataReady: false,\n      filter: 'Todo'\n    };\n\n    _this.componentDidMount = function () {\n      _this.loadTodos();\n    };\n\n    _this.loadTodos = function _callee() {\n      var getTodos, parsedTodos;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('todos'));\n\n            case 3:\n              getTodos = _context.sent;\n              parsedTodos = JSON.parse(getTodos);\n\n              _this.setState({\n                isDataReady: true,\n                todos: parsedTodos || {}\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              alert('Application Error. Cannot load data.');\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeTodo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: styles.tasksWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 3\n        }\n      }, React.createElement(Text, {\n        style: styles.sectionTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 4\n        }\n      }, \"Today's tasks\")), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: styles.items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 3\n        }\n      })), React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n        style: styles.writeTasksWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 3\n        }\n      }));\n    }\n  }]);\n\n  return HomeTodo;\n}(Component);\nvar styles = StyleSheet.create({\n  item: {\n    margin: \"auto\",\n    marginLeft: 10,\n    maxHeight: \"80%\",\n    width: \"95%\",\n    maxWidth: \"95%\",\n    backgroundColor: '#FFF',\n    padding: 15,\n    borderRadius: 20,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n    overflow: \"scroll\"\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: \"center\",\n    flexWrap: 'wrap'\n  },\n  text: {\n    marginTop: \"auto\",\n    width: \"75%\",\n    height: \"auto\",\n    fontSize: 20,\n    marginRight: 20\n  },\n  container: {\n    flex: 1,\n    overflow: \"scroll\",\n    backgroundColor: '#188078'\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    color: '#FFFFFF',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30,\n    marginBottom: 85\n  },\n  writeTasksWrapper: {\n    width: \"100%\",\n    backgroundColor: \"#188078\",\n    position: \"absolute\",\n    height: 90,\n    bottom: 0,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    margin: 1,\n    marginBottom: 5,\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    height: 50,\n    width: 250,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    borderColor: \"#C0C0C0\",\n    borderwidth: 1\n  },\n  addWrapper: {\n    marginBottom: 5,\n    width: 60,\n    height: 50,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderwidth: 1\n  },\n  addText: {}\n});\nexport default HomeTodo;","map":{"version":3,"sources":["/home/user42/redux_int_the_making/screens/HomeTodo.js"],"names":["MaterialIcons","StatusBar","React","Component","BouncyCheckbox","AsyncStorage","HomeTodo","state","todos","isDataReady","filter","componentDidMount","loadTodos","getItem","getTodos","parsedTodos","JSON","parse","setState","alert","styles","container","tasksWrapper","sectionTitle","items","Platform","OS","writeTasksWrapper","StyleSheet","create","item","margin","marginLeft","maxHeight","width","maxWidth","backgroundColor","padding","borderRadius","flexDirection","alignItems","justifyContent","marginBottom","overflow","itemLeft","flexWrap","text","marginTop","height","fontSize","marginRight","flex","paddingTop","paddingHorizontal","color","fontWeight","position","bottom","input","paddingVertical","borderColor","borderwidth","addWrapper","addText"],"mappings":"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","sourcesContent":["import { MaterialIcons } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react'\nimport { StyleSheet, Text, View,ScrollView, KeyboardAvoidingView, Platform, TextInput, TouchableOpacity, Keyboard, FlatList  } from 'react-native';\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport class  HomeTodo extends Component {\n\n\n\tstate = {\n\t\ttodos: {},\n\t\tisDataReady: false,\n\t\tfilter: 'Todo'\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.loadTodos()\n\t}\n\n\tloadTodos = async () => {\n\t\ttry {\n\t\t\tconst getTodos = await AsyncStorage.getItem('todos')\n\t\t\tconst parsedTodos = JSON.parse(getTodos)\n\t\t\tthis.setState({ isDataReady: true, todos: parsedTodos || {} })\n\t\t} catch (err) {\n\t\t\talert('Application Error. Cannot load data.')\n\t\t}\n\t}\n\n  render() {\n\t// const { isDataReady, filter } = this.state\n\n\t// if (!isDataReady) {\n\t// \treturn <AppLoading />\n\t// }\n\t\treturn (\n\t\t<View style={styles.container}>\n\t\t<View style={styles.tasksWrapper}>\n\t\t\t<Text style={styles.sectionTitle}>Today's tasks</Text>\n\n\t\t</View>\n\n\t\t<ScrollView>\n\t\t<View style={styles.items}>\n\t\t\t{/* {\n\t\t\t\ttodo_list.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<View style={styles.item}>\n\t\t\t\t\t<View style={styles.itemLeft}>\n\t\t\t\t\t\t<View > \n\t\t\t\t\t\t<BouncyCheckbox\n\t\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\t\tfillColor=\"#188078\"\n\t\t\t\t\t\t\ticonStyle={{ borderColor: \"#188078\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Text style={styles.text}>{item.task}</Text>\n\t\t\t\t\t<TouchableOpacity key={index} onPress={() => completeTask(item.id)}>\n\t\t\t\t\t\t\t<MaterialIcons name=\"delete\" size={25} color=\"#188078\" />\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t) \n\t\t\t})\n\t\t\t} */}\n\t\t</View>\n\t\t</ScrollView>\n\n\t\t\t{/* <FlatList\n\t\t\t\t\tdata={todo_list}\n\t\t\t\t\tkeyExtractor={(item) => item.id}\n\t\t\t\t\trenderItem={({item, index}) => {\n\t\t\t\t\treturn (\n\n\t\t\t\t\t\t<View style={styles.item}>\n\t\t\t\t\t\t<View style={styles.itemLeft}>\n\t\t\t\t\t\t\t<View > \n\t\t\t\t\t\t\t<BouncyCheckbox\n\t\t\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\t\t\tfillColor=\"#188078\"\n\t\t\t\t\t\t\t\ticonStyle={{ borderColor: \"#188078\" }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<Text style={styles.text}>{item.task}</Text>\n\t\t\t\t\t\t<TouchableOpacity key={index} onPress={() => completeTask(item.id)}>\n\t\t\t\t\t\t\t\t<MaterialIcons name=\"delete\" size={25} color=\"#188078\" />\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t// <>\n\t\t\t\t\t\t// <Card>\n\t\t\t\t\t\t// <Card.Title\n\t\t\t\t\t\t// \ttitle={`Task#${item.id}`}\n\t\t\t\t\t\t// \tleft={(props) => <Icon name=\"tasks\" size={24} color=\"black\" />}\n\t\t\t\t\t\t// \tright={(props) => <ButtonIcon iconName=\"close\" color=\"red\" onPress={() => handleDeleteTodo(item.id)} />}\n\t\t\t\t\t\t// />\n\t\t\t\t\t\t// <Card.Content>\n\t\t\t\t\t\t// \t<Paragraph>{item.task}</Paragraph>\n\t\t\t\t\t\t// </Card.Content>\n\t\t\t\t\t\t// </Card>\n\t\t\t\t\t\t// <Spacer />\n\t\t\t\t\t\t// </>\n\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t/> */}\n\n\t\t<KeyboardAvoidingView \n\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n\t\t\tstyle={styles.writeTasksWrapper}\n\t\t>\n\t\t\t{/* <TextInput style={styles.input} placeholder={\"Write a task\"} value={task} onChangeText={text => setTask(text)} />\n\n\t\t\t<TouchableOpacity onPress={() => handleAddTask()}>\n\t\t\t<View style={styles.addWrapper}>\n\t\t\t\t<Text style={styles.addText}>+</Text>\n\n\t\t\t</View>\n\t\t\t</TouchableOpacity> */}\n\n\t\t</KeyboardAvoidingView>\n\t\t</View>\n\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\titem: {\n\t\tmargin: \"auto\",\n\t\tmarginLeft: 10,\n\t\tmaxHeight: \"80%\",\n\t\twidth: \"95%\",\n\t\tmaxWidth: \"95%\",\n        backgroundColor: '#FFF',\n        padding: 15,\n        borderRadius: 20,\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n\t\tmarginBottom: 20,\n\t\toverflow: \"scroll\"\n    },\n    itemLeft: {\n        flexDirection: 'row',\n        alignItems: \"center\",\n        flexWrap: 'wrap'\n    },\n    text: {\n\t\tmarginTop: \"auto\",\n\t\twidth: \"75%\",\n\t\theight: \"auto\",\n\t\tfontSize: 20,\n\t\tmarginRight: 20\n    },\n\tcontainer: {\n\t\tflex: 1,\n\t\toverflow: \"scroll\",\n\t\tbackgroundColor: '#188078',\n\t\n\t  },\n\t  tasksWrapper: {\n\t\tpaddingTop: 80,\n\t\tpaddingHorizontal: 20\n\t\n\t  },\n\t  sectionTitle: {\n\t\tcolor: '#FFFFFF',\n\t\tfontSize: 24,\n\t\tfontWeight: 'bold'\n\t  },\n\t  items: {\n\t\tmarginTop: 30,\n\t\tmarginBottom: 85,\n\t  },\n\t  writeTasksWrapper : {\n\t\twidth: \"100%\",\n\t\tbackgroundColor: \"#188078\",\n\t\tposition: \"absolute\",\n\t\theight: 90,\n\t\tbottom: 0,\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-around\",\n\t\talignItems: \"center\"\n\t  },\n\t  input : {\n\t\tmargin: 1,\n\t\tmarginBottom: 5,\n\t\tpaddingVertical: 15,\n\t\tpaddingHorizontal: 15,\n\t\theight: 50,\n\t\twidth: 250,\n\t\tbackgroundColor: \"#FFF\",\n\t\tborderRadius: 20,\n\t\tborderColor: \"#C0C0C0\",\n\t\tborderwidth: 1\n\t  },\n\t  addWrapper: {\n\t\tmarginBottom: 5,\n\t\twidth: 60,\n\t\theight: 50,\n\t\tbackgroundColor: \"#FFF\",\n\t\tborderRadius: 20,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderColor: \"#C0C0C0\",\n\t\tborderwidth: 1\n\t  },\n\t  addText: {}\n});\n\nexport default HomeTodo"]},"metadata":{},"sourceType":"module"}