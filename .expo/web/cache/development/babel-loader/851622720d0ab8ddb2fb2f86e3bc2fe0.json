{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/user42/redux_int_the_making/screens/HomeTodo.js\";\n\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { connect } from 'react-redux';\nimport { addTask, deleteTask } from \"../redux/action\";\n\nvar HomeTodo = function HomeTodo(_ref) {\n  var todo_list = _ref.todo_list,\n      addTask = _ref.addTask,\n      deleteTask = _ref.deleteTask;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var myHeight = 50;\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    addTask(task);\n    setSelection(true);\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    deleteTask(id);\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSelected = _useState6[0],\n      setSelection = _useState6[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.tasksWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Today's tasks\")), React.createElement(FlatList, {\n    data: todo_list,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }\n      }, React.createElement(Card.Title, {\n        title: \"Task#\" + item.id,\n        left: function left(props) {\n          return React.createElement(Icon, {\n            name: \"tasks\",\n            size: 24,\n            color: \"black\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 24\n            }\n          });\n        },\n        right: function right(props) {\n          return React.createElement(ButtonIcon, {\n            iconName: \"close\",\n            color: \"red\",\n            onPress: function onPress() {\n              return handleDeleteTodo(item.id);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }\n      }), React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }\n      }, React.createElement(Paragraph, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, item.task))), React.createElement(Spacer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.writeTasksWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Write a task\",\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.addText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"+\")))));\n};\n\nvar styles = StyleSheet.create({\n  item: {\n    margin: \"auto\",\n    marginLeft: 10,\n    maxHeight: \"80%\",\n    width: \"95%\",\n    maxWidth: \"95%\",\n    backgroundColor: '#FFF',\n    padding: 15,\n    borderRadius: 20,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n    overflow: \"scroll\"\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    alignItems: \"center\",\n    flexWrap: 'wrap'\n  },\n  text: {\n    marginTop: \"auto\",\n    width: \"75%\",\n    height: \"auto\",\n    fontSize: 20,\n    marginRight: 20\n  },\n  container: {\n    flex: 1,\n    overflow: \"scroll\",\n    backgroundColor: '#188078'\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    color: '#FFFFFF',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30,\n    marginBottom: 85\n  },\n  writeTasksWrapper: {\n    width: \"100%\",\n    backgroundColor: \"#188078\",\n    position: \"absolute\",\n    height: 90,\n    bottom: 0,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    margin: 1,\n    marginBottom: 5,\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    height: 50,\n    width: 250,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    borderColor: \"#C0C0C0\",\n    borderwidth: 1\n  },\n  addWrapper: {\n    marginBottom: 5,\n    width: 60,\n    height: 50,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderwidth: 1\n  },\n  addText: {}\n});\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    todo_list: state.todos.todo_list\n  };\n};\n\nvar mapDispatchToProps = {\n  addTask: addTask,\n  deleteTask: deleteTask\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeTodo);","map":{"version":3,"sources":["/home/user42/redux_int_the_making/screens/HomeTodo.js"],"names":["MaterialIcons","StatusBar","React","useState","BouncyCheckbox","connect","addTask","deleteTask","HomeTodo","todo_list","task","setTask","taskItems","setTaskItems","myHeight","handleAddTask","Keyboard","dismiss","setSelection","completeTask","index","id","isSelected","styles","container","tasksWrapper","sectionTitle","item","props","handleDeleteTodo","Platform","OS","writeTasksWrapper","input","text","addWrapper","addText","StyleSheet","create","margin","marginLeft","maxHeight","width","maxWidth","backgroundColor","padding","borderRadius","flexDirection","alignItems","justifyContent","marginBottom","overflow","itemLeft","flexWrap","marginTop","height","fontSize","marginRight","flex","paddingTop","paddingHorizontal","color","fontWeight","items","position","bottom","paddingVertical","borderColor","borderwidth","mapStateToProps","state","ownProps","todos","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { MaterialIcons } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View,ScrollView, KeyboardAvoidingView, Platform, TextInput, TouchableOpacity, Keyboard } from 'react-native';\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { connect } from 'react-redux';\nimport { addTask, deleteTask} from '../redux/action';\n\nconst HomeTodo =  ({ todo_list, addTask, deleteTask }) => {\n\n\n  const [task, setTask] = useState();\n\n  const [taskItems, setTaskItems] = useState([]);\n\n  let myHeight = 50;\n\n  const handleAddTask = () => {\n    Keyboard.dismiss();\n\taddTask(task)\n\tsetSelection(true);\n    setTask(null);\n  }\n\n  const completeTask = (index) => {\n    deleteTask(id)\n  }\n\n  const [isSelected, setSelection] = useState(false);\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.tasksWrapper}>\n        <Text style={styles.sectionTitle}>Today's tasks</Text>\n\n      </View>\n\n\t  {/* <ScrollView>\n      <View style={styles.items}>\n        {\n          taskItems.map((item, index) => {\n            return (\n\t\t\t\t<View style={styles.item}>\n\t\t\t\t<View style={styles.itemLeft}>\n\t\t\t\t\t<View > \n\t\t\t\t\t<BouncyCheckbox\n\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\tfillColor=\"#188078\"\n\t\t\t\t\t\ticonStyle={{ borderColor: \"#188078\" }}\n\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<Text style={styles.text}>{item}</Text>\n\t\t\t\t<TouchableOpacity key={index} onPress={() => completeTask(index)}>\n\t\t\t\t\t\t<MaterialIcons name=\"delete\" size={25} color=\"#188078\" />\n\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n            ) \n          })\n        }\n      </View>\n\t  </ScrollView> */}\n\n\t\t<FlatList\n\t\t\t\tdata={todo_list}\n\t\t\t\tkeyExtractor={(item) => item.id}\n\t\t\t\trenderItem={({item, index}) => {\n\t\t\t\treturn (\n\n\t\t\t\t\t\n\t\t\t\t\t<>\n\t\t\t\t\t<Card>\n\t\t\t\t\t<Card.Title\n\t\t\t\t\t\ttitle={`Task#${item.id}`}\n\t\t\t\t\t\tleft={(props) => <Icon name=\"tasks\" size={24} color=\"black\" />}\n\t\t\t\t\t\tright={(props) => <ButtonIcon iconName=\"close\" color=\"red\" onPress={() => handleDeleteTodo(item.id)} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t<Paragraph>{item.task}</Paragraph>\n\t\t\t\t\t</Card.Content>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Spacer />\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t\t}}\n\t\t/>\n\n      <KeyboardAvoidingView \n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.writeTasksWrapper}\n      >\n        <TextInput style={styles.input} placeholder={\"Write a task\"} value={task} onChangeText={text => setTask(text)} />\n\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>+</Text>\n\n          </View>\n        </TouchableOpacity>\n\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n\titem: {\n\t\tmargin: \"auto\",\n\t\tmarginLeft: 10,\n\t\tmaxHeight: \"80%\",\n\t\twidth: \"95%\",\n\t\tmaxWidth: \"95%\",\n        backgroundColor: '#FFF',\n        padding: 15,\n        borderRadius: 20,\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n\t\tmarginBottom: 20,\n\t\toverflow: \"scroll\"\n    },\n    itemLeft: {\n        flexDirection: 'row',\n        alignItems: \"center\",\n        flexWrap: 'wrap'\n    },\n    text: {\n\t\tmarginTop: \"auto\",\n\t\twidth: \"75%\",\n\t\theight: \"auto\",\n\t\tfontSize: 20,\n\t\tmarginRight: 20\n    },\n\tcontainer: {\n\t\tflex: 1,\n\t\toverflow: \"scroll\",\n\t\tbackgroundColor: '#188078',\n\t\n\t  },\n\t  tasksWrapper: {\n\t\tpaddingTop: 80,\n\t\tpaddingHorizontal: 20\n\t\n\t  },\n\t  sectionTitle: {\n\t\tcolor: '#FFFFFF',\n\t\tfontSize: 24,\n\t\tfontWeight: 'bold'\n\t  },\n\t  items: {\n\t\tmarginTop: 30,\n\t\tmarginBottom: 85,\n\t  },\n\t  writeTasksWrapper : {\n\t\twidth: \"100%\",\n\t\tbackgroundColor: \"#188078\",\n\t\tposition: \"absolute\",\n\t\theight: 90,\n\t\tbottom: 0,\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-around\",\n\t\talignItems: \"center\"\n\t  },\n\t  input : {\n\t\tmargin: 1,\n\t\tmarginBottom: 5,\n\t\tpaddingVertical: 15,\n\t\tpaddingHorizontal: 15,\n\t\theight: 50,\n\t\twidth: 250,\n\t\tbackgroundColor: \"#FFF\",\n\t\tborderRadius: 20,\n\t\tborderColor: \"#C0C0C0\",\n\t\tborderwidth: 1\n\t  },\n\t  addWrapper: {\n\t\tmarginBottom: 5,\n\t\twidth: 60,\n\t\theight: 50,\n\t\tbackgroundColor: \"#FFF\",\n\t\tborderRadius: 20,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderColor: \"#C0C0C0\",\n\t\tborderwidth: 1\n\t  },\n\t  addText: {}\n});\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t  todo_list: state.todos.todo_list,\n\t}\n}\n  \nconst mapDispatchToProps = { addTask, deleteTask }\n  \nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(HomeTodo)"]},"metadata":{},"sourceType":"module"}